parameters:
    # directories
    framework_dir: . # this is overwritten in code
    application_dir: . # this is overwritten in code
    config_dir: %application_dir%/config
    cache_dir: %application_dir%/cache
    root_dir: %application_dir%/..
    web_dir: %root_dir%/web

    # router parameters
    router.host: localhost
    router.protocol: "http://"
    router.port: 80

    log_file: %root_dir%/logs/debug.log
    log_level: debug

    # parameters that will be overwritten by the framework anyway, but are here for clarity
    env: dev
    debug: true
    mode: -1

    # convenience event names
    event.controller_did_respond: Splot\Framework\Events\ControllerDidRespond
    event.controller_will_respond: Splot\Framework\Events\ControllerWillRespond
    event.did_find_route_for_request: Splot\Framework\Events\DidFindRouteForRequest
    event.did_not_find_route_for_request: Splot\Framework\Events\DidNotFindRouteForRequest
    event.did_receive_request: Splot\Framework\Events\DidReceiveRequest
    event.error_did_occur: Splot\Framework\Events\ErrorDidOccur
    event.exception_did_occur: Splot\Framework\Events\ExceptionDidOccur
    event.fatal_error_did_occur: Splot\Framework\Events\FatalErrorDidOccur
    event.will_send_response: Splot\Framework\Events\WillSendResponse
    # aliases
    event.controller_response: %event.controller_did_respond%
    event.route: %event.did_find_route_for_request%
    event.no_route: %event.did_not_find_route_for_request%
    event.request: %event.did_receive_request%
    event.error: %event.error_did_occur%
    event.exception: %event.exception_did_occur%
    event.fatal_error: %event.fatal_error_did_occur%
    event.response: %event.will_send_response%

services:
    
    config:
        class: Splot\Framework\Config\Config
        call:
            - [loadFromFile, ["%framework_dir%/config.yml"]]

    config_module.abstract:
        class: Splot\Framework\Config\Config
        abstract: true

    # logger providers
    clog: Splot\Framework\Log\Clog

    #clog.writer.file:
    #    class: MD\Clog\Writers\FileLogger
    #    arguments:
    #        - %log_file%
    #        - %log_level%
    #    notify:
    #        - ["@clog", "addWriter", ["@"]]

    clog.writer.memory: MD\Clog\Writers\MemoryLogger

    logger_provider:
        alias: clog

    # various loggers
    logger: 
        factory: ["@logger_provider", "provide", ["Application"]]
        aliases: ["logger.app", "logger.application"]
    logger.splot:
        factory: ["@logger_provider", "provide", ["Splot"]]
        aliases: ["splot.logger"]
    logger.console: ["@logger_provider", "provide", ["Console"]]
    logger.event_manager: ["@logger_provider", "provide", ["Event Manager"]]

    # cache
    cache:
        factory: ["@cache_provider", "provide", ["application"]]

    cache_provider:
        class: Splot\Cache\CacheProvider
        arguments:
            - @cache.store.file
            - global_namespace: %env%

    # cache stores
    cache.store.file:
        class: Splot\Cache\Store\FileStore
        arguments:
            - %cache_dir%
        notify:
            - ["@cache_provider", "registerStore", ["file", "@"]]     


    # event manager
    event_manager:
        class: Splot\Framework\EventManager\EventManager
        arguments:
            - @container
            - @logger.event_manager?

    # resource finder
    resource_finder:
        class: Splot\Framework\Resources\Finder
        arguments:
            - @application

    # router
    router:
        class: Splot\Framework\Routes\Router
        arguments:
            - %router.host%
            - %router.protocol%
            - %router.port%

    # console
    console:
        class: Splot\Framework\Console\Console
        arguments:
            - @application
            - @logger.console

    # other helper services
    filesystem: Symfony\Component\Filesystem\Filesystem

    timer:
        class: MD\Foundation\Debug\Timer
        singleton: false

    # whoops for error handling
    whoops: Whoops\Run

    whoops.handler.null: Splot\Framework\ErrorHandlers\NullErrorHandler

    whoops.handler.pretty_page:
        class: Splot\Framework\ErrorHandlers\PrettyPageErrorHandler
        arguments:
            - %debug%
        notify:
            - ["@whoops", "pushHandler", ["@"]]
            
    whoops.handler.log:
        class: Splot\Framework\ErrorHandlers\LogErrorHandler
        arguments:
            - @logger
        notify:
            - ["@whoops", "pushHandler", ["@"]]

    whoops.handler.event:
        class: Splot\Framework\ErrorHandlers\EventErrorHandler
        arguments:
            - @event_manager
        notify:
            - ["@whoops", "pushHandler", ["@"]]
